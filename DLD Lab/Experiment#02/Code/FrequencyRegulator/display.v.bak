`timescale 1ns/1ns
module display (psi,
                clk, 
                rst, 
                setPeriod,
			       out,
					 equal,
					 increment,
				    decrement,
					 halfDuration,
					 duration);
   
   input psi,
         clk,
         rst;
   input [7:0] setPeriod;
	output reg [7:0] out,
	                 halfDuration;
   output reg equal,
	           increment,
				  decrement;
					
	output reg [9:0] duration;

   reg enable;
   reg oldpsi;

	assign duration2 = duration;	
   
    always @(posedge clk, posedge rst) begin 
      if (rst) 
        oldpsi <= 1'b0;
      else 
	      oldpsi <= psi;
	  end
      
    always @(posedge clk) begin
      case ({oldpsi,psi})
        2'b00: halfDuration <= halfDuration;
        2'b01: halfDuration <= 8'b0;
        2'b10: halfDuration <= halfDuration;
        2'b11: halfDuration <= halfDuration + 1;
      endcase
		duration <= halfDuration * 2;
    end
  
    always @(posedge clk) begin
      if ({oldpsi, psi} == 2'b10) enable <= 1'b1;
 		else if ({oldpsi, psi} == 2'b01) enable <= 1'b0;   
	 end
	  
	 always @(enable, setPeriod, duration) begin
	  	  {increment, decrement, equal} <= 3'b0;
	     if (enable)
			    if ({2'b0, setPeriod} < duration) increment <= 1'b1;
			    else
			        if ({2'b0, setPeriod} > duration) decrement <= 1'b1;
					  else
						   if ({2'b0, setPeriod} == duration) equal <= 1'b1;
	 end
	
	 always @(posedge clk, posedge rst) begin
	     if (rst) out <= 8'b01111111;
	     else
	        if (enable)
     	        if (increment) out <= out + 1;
   	        else if (decrement) out <= out - 1;
	 end
endmodule